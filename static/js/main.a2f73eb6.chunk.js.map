{"version":3,"sources":["images/bg.jpg","service/api.jsx","components/Information.jsx","components/Form.jsx","components/Weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["getData","city","country","a","axios","get","useStyles","makeStyles","component","margin","row","padding","fontSize","letterSpacing","value","color","icon","marginRight","Information","data","classes","Box","className","Typography","name","sys","main","temp","humidity","Date","sunrise","toLocaleTimeString","sunset","weather","clouds","all","background","input","button","width","height","marginTop","Form","useState","getWeatherData","setCity","setCountry","click","handleClick","useEffect","getWeather","then","response","console","log","TextField","inputProps","onChange","e","target","label","claassName","Button","variant","onClick","display","alignItems","leftContainer","backgroundImage","logo","backgroundSize","borderRadius","rightContainer","Weather","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2f73eb6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.9c811a51.jpg\";","import axios from 'axios';\r\n\r\nconst URL='https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY= '54af9e0f847a1f3e3397b0fbbdc2c053';\r\n\r\nexport const getData = async(city, country) => {\r\n    return await axios.get(`${URL}?q=${city},${country}&appid=${API_KEY}&units=metric`)\r\n}","import { Box, Typography ,makeStyles} from \"@material-ui/core\";\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport SettingsBrightnessIcon from '@material-ui/icons/SettingsBrightness'\r\nimport OpacityIcon from '@material-ui/icons/Opacity';\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\r\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\nconst useStyles=makeStyles({\r\n    component: {\r\n        margin:50\r\n    },\r\n    row: {\r\n        padding:5,\r\n        fontSize:20,\r\n        letterSpacing:2\r\n    },\r\n    value: {\r\n        color:'#fff'\r\n    },\r\n    icon:  {\r\n        marginRight:10,\r\n        color:'darked'\r\n    }\r\n})\r\n\r\nconst Information = ({data}) => {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        data ?\r\n        <Box className = {classes.component}>\r\n        <Typography className = {classes.row}><LocationOnIcon  className={classes.icon}/>Location : <Box className = {classes.value}component=\"span\">{data.name}, {data.sys.country}</Box> </Typography>\r\n        <Typography className =  {classes.row}><SettingsBrightnessIcon className={classes.icon} />Temperature :<Box className = {classes.value}component=\"span\">{data.main.temp} Â°C</Box></Typography>\r\n        <Typography className = {classes.row}><OpacityIcon  className={classes.icon}/>Humidity :<Box className = {classes.value}component=\"span\"> {data.main.humidity} %</Box></Typography>\r\n        <Typography className = {classes.row}><Brightness5Icon className={classes.icon} />Sun Rise : <Box className = {classes.value}component=\"span\">{new Date(data.sys.sunrise*1000).toLocaleTimeString()}</Box></Typography>\r\n        <Typography className = {classes.row}><Brightness6Icon className={classes.icon} />SunSet : <Box className = {classes.value}component=\"span\">{new Date(data.sys.sunset *1000).toLocaleTimeString()}</Box></Typography>\r\n        <Typography className = {classes.row}><DehazeIcon className={classes.icon} />Condition :<Box className = {classes.value}component=\"span\">{data.weather[0].main} </Box></Typography>\r\n        <Typography className = {classes.row}><CloudIcon className={classes.icon} />Clouds :<Box className = {classes.value}component=\"span\">{data.clouds.all} %</Box></Typography>\r\n\r\n        </Box> : ''\r\n    )\r\n}\r\n\r\nexport default Information;","import {Box, TextField,Button ,makeStyles} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getData } from \"../service/api\";\r\nimport Information from './Information';\r\n\r\nconst useStyles = makeStyles({\r\n    component:{\r\n        padding: 10,\r\n        background: '#445a6f'\r\n    },\r\n    input: {\r\n        color: '#fff',\r\n        marginRight: 15\r\n    },\r\n    button: {\r\n        width:150,\r\n        height:40,\r\n        background:'#e67e22',\r\n        color:'#fff',\r\n        marginTop:5\r\n    }\r\n})\r\n\r\nconst Form = () => {\r\n    const classes = useStyles();\r\n    const [data, getWeatherData] = useState();\r\n    const [city, setCity] = useState('');\r\n    const [country, setCountry] = useState('')\r\n    const [click, handleClick] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n       const getWeather = async () => {\r\n            city && await getData(city, country).then(response=>{\r\n             getWeatherData(response.data);\r\n             console.log(response.data)\r\n   })\r\n}\r\ngetWeather(); \r\nhandleClick(false);\r\n    },[click]);\r\n    const handleCityChange = (value) => {\r\n         setCity(value);\r\n    }\r\n\r\n    const handleCountryChange = (value) => {\r\n        setCountry(value);\r\n   }\r\n    return (\r\n        <>\r\n        <Box className = {classes.component}>\r\n            <TextField inputProps = {\r\n                {className:classes.input}}\r\n                onChange={(e) => handleCityChange (e.target.value)}\r\n                label=\"City\"\r\n                claassName = {classes.input}\r\n            />\r\n            <TextField\r\n            inputProps={{className:classes.input}}\r\n            onChange={(e) => handleCountryChange (e.target.value)}\r\n                label=\"Country\"\r\n                claassName={classes.input}\r\n            />\r\n            <Button\r\n            variant=\"contained\"\r\n            className={classes.button}\r\n            onClick = {() => handleClick(true)}>\r\n            Get Weather\r\n            </Button>\r\n        </Box>\r\n        <Information data ={data} />\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Form;","import {Box, makeStyles} from '@material-ui/core';\r\nimport logo from '../images/bg.jpg';\r\n\r\nimport Form from './Form';\r\n\r\nconst useStyles = makeStyles({\r\n    component:{\r\n    height:'100vh',\r\n    display:'flex',\r\n    alignItems:'center',\r\n    width:'65%',\r\n    margin:'0 auto'\r\n    },\r\n    leftContainer:{\r\n    backgroundImage: `url(${logo})`,\r\n    height:'80%',\r\n    width:'30%',\r\n    backgroundSize:'cover',\r\n    borderRadius:'20px 0 0 20px'\r\n    },\r\n    rightContainer: {\r\n        background:'linear-gradient(to right, #e74c3c, #e67e22)',\r\n        height:'80%',\r\n        width:'70%'\r\n    }\r\n})\r\nconst Weather = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.component}>\r\n        <Box className={classes.leftContainer}></Box>\r\n        <Box className={classes.rightContainer}>\r\n            <Form/>\r\n        </Box>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default Weather;","import Weather from \"./components/Weather\";\nfunction App() {\n  return (\n    \n   <Weather/>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}